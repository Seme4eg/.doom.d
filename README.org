#+STARTUP: overview hideblocks

* Doom [[file:~/.emacs.d/docs/index.org][#docs-index]] [[file:~/.emacs.d/docs/getting_started.org][#getting-started]] [[file:~/.emacs.d/docs/modules.org][#modules]]

*IMPORTANT* - [[file:~/.emacs.d/docs/getting_started.org::*Looking up documentation and state from within Emacs][Looking up documentation and HELP]] in *ANY* possible way e.g. /vars,
funcs, faces, *bindings*, keys, chars, libs/

config reload - ~spc h r r~

** Doom Theme [[https://github.com/hlissner/emacs-doom-themes][#here]]
There are two ways to load a theme. Both assume the theme is installed and
available. You can either set =doom-theme= or manually load a theme with the
=load-theme= function. This is the default - ~(setq doom-theme 'doom-one)~

- ~SPC h t~   load-theme Load Custom theme named THEME from its file and p...
- ~SPC h r t~ doom/reload-theme Reload the current Emacs theme.

** Fonts

Doom exposes five (optional) variables for controlling fonts in Doom. Here
are the three important ones:
+ `doom-font'
+ `doom-variable-pitch-font'
+ `doom-big-font' -- used for `doom-big-font-mode'; use this for
  presentations or streaming.

They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
font string. You generally only need these two:
#+begin_src elisp
(setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
      doom-variable-pitch-font (font-spec :family "sans" :size 13))
#+end_src

* to do
while vacation: [18%]
- [ ] [[https://emacs-lsp.github.io/dap-mode/page/configuration/#javascript][dap-mode for node]] - figure out js *debugging*
- [ ] ([[http://pragmaticemacs.com/mu4e-tutorials/][mu4e]] +gmail) ;; REVIEW (init.el); also ~spc s s mu4e~ this buffer to get
  more input data.
- [ ] setup [[https://snapcraft.io/telega][telega]] (telegramm emacs client)
- [X] [[https://orgmode.org/manual/Attachments.html][org-attachments]] - ~spc m a~ prefix, sir.. everything else in =org-readme=
- [ ] irc / erc / Rcirc - all irc clients (set 1 of those up for i.e. telegram)
- [X] what is 'timer', 'char timer'? ~spc s s timer~..
- [ ] dired [[https://github.com/ralesi/ranger.el][ranger]] - might it be faster than treemacs? and how often im goin to
  use it? (=+ranger= flag)
- [ ] [[https://github.com/chenyanming/calibredb.el#table-of-contents][calibredb]] - learn how to use
- [ ] learn elisp (SPC h 4 i -> gm -> elisp)

-----

Games in emacs:
- [ ] [[https://www.masteringemacs.org/article/fun-games-in-emacs][link 1]]
- [ ] [[https://www.emacswiki.org/emacs/CategoryGames][link 2]]

* Shortcuts

Sources: [[file:~/.emacs.d/modules/config/default/+evil-bindings.el][+evil-bindings.el]], [[https://github.com/hlissner/doom-emacs/blob/96bea9e9ad4f3e3412472fa0f26a19d19be66a1a/modules/config/default/%2Bbindings.el][bindings.el]], [[file:~/.emacs.d/modules/editor/evil/config.el::;;; Keybinds][evil/config.el]]

_Misc:_

~C-S-f~ / ~spc t F~ - #'toggle-frame-fullscreen

- Buffer-local font resizing: ~C-= / C--~ #'text-scale-increase/decrease
- Frame-local font resizing: ~M-C-=/-~  #'doom/increase/decrease-font-size
- ~C-+~   #'doom/reset-font-size

_Anywhere in help-related / apropos-related buffers:_
- ~o~ - #'link-hint-open-link

Also in =apropos= - ~TAB / backtab~ - forward / backward

Custom evil keybinds:
- :nv "zn"    #'+evil:narrow-buffer
- :n  "zN"    #'doom/widen-indirectly-narrowed-buffer
- :n  "zx"    #'kill-current-buffer
- :n  "ZX"    #'doom/save-and-kill-buffer

;; don't leave visual mode after shifting:
- :v  "<"     #'+evil/shift-left  ; vnoremap < <gv
- :v  ">"     #'+evil/shift-right  ; vnoremap > >gv

** minibuffer
Btw u can use ~C-j/k~ instead of ~C-n/p~ in minibuffer (~C-j/k~ #'next/previous-line)

- ~C-S-j/k~ #'scroll-up/down-command
- ~C-a~   #'move-beginning-of-line
- ~C-b/f~   #'evil-backward/forward-char
- ~C-r~   #'evil-paste-from-register
- ~C-u~   #'evil-delete-back-to-indentation
- ~C-v~   #'yank
- ~C-w~   #'doom/delete-backward-word
- ~C-z~   (cmd! (ignore-errors (call-interactively #'undo))))

** <leader>

Uncategorized:
- "Eval expression"       ";"    #'pp-eval-expression
- "Pop up scratch buffer" "x"    #'doom/open-scratch-buffer
- "Org Capture"           "X"    #'org-capture
- "Search for symbol in project" "*" #'+default/search-project-for-symbol-at-point
- "Search project"               "/" #'+default/search-project
- "Find file in project"  "SPC"  #'projectile-find-file
- "Jump to bookmark"      "RET"  #'bookmark-jump
- "Find file"             "."    #'find-file

# C-u is used by evil
- "Universal argument"    "u"    #'universal-argument
- "help"                  "h"    help-map

workspaces:
- "Switch workspace buffer" "," #'persp-switch-to-buffer
- "Switch buffer"           "<" #'switch-to-buffer)
- "Switch to last buffer" "`"    #'evil-switch-to-windows-last-buffer
- "Resume last search"    "'"

*** <leader> TAB - workspace

- "Display tab bar"           "TAB" #'+workspace/display
- "Switch workspace"          "."   #'+workspace/switch-to
- "Switch to last workspace"  "`"   #'+workspace/other
- "New workspace"             "n"   #'+workspace/new
- "New named workspace"       "N"   #'+workspace/new-named
- "Load workspace from file"  "l"   #'+workspace/load
- "Save workspace to file"    "s"   #'+workspace/save
- "Delete session"            "x"   #'+workspace/kill-session
- "Delete this workspace"     "d"   #'+workspace/delete
- "Rename workspace"          "r"   #'+workspace/rename
- "Restore last session"      "R"   #'+workspace/restore-last-session
- "Next workspace"            "]"   #'+workspace/switch-right
- "Previous workspace"        "["   #'+workspace/switch-left
- "Switch to {number} workspace"   "{number}"   #'+workspace/switch-to-{number}
- "Switch to final workspace" "0"   #'+workspace/switch-to-final))

*** <leader> b - buffers

- "Toggle narrowing"            "-"   #'doom/toggle-narrow-buffer
- "Previous buffer"             "["   #'previous-buffer
- "Next buffer"                 "]"   #'next-buffer
- "Switch workspace buffer" "b" #'persp-switch-to-buffer
- "Switch buffer"           "B" #'switch-to-buffer)
- "Clone buffer"                "c"   #'clone-indirect-buffer
- "Clone buffer other window"   "C"   #'clone-indirect-buffer-other-window
- "Kill buffer"                 "d"   #'kill-current-buffer
- "ibuffer"                     "i"   #'ibuffer
- "Kill buffer"                 "k"   #'kill-current-buffer
- "Kill all buffers"            "K"   #'doom/kill-all-buffers
- "Switch to last buffer"       "l"   #'evil-switch-to-windows-last-buffer
- "Set bookmark"                "m"   #'bookmark-set
- "Delete bookmark"             "M"   #'bookmark-delete
- "Next buffer"                 "n"   #'next-buffer
- "New empty buffer"            "N"   #'evil-buffer-new
- "Kill other buffers"          "O"   #'doom/kill-other-buffers
- "Previous buffer"             "p"   #'previous-buffer
- "Revert buffer"               "r"   #'revert-buffer
- "Save buffer"                 "s"   #'basic-save-buffer
- "Save all buffers"            "S"   #'evil-write-all
- "Save buffer as root"         "u"   #'doom/sudo-save-buffer
- "Pop up scratch buffer"       "x"   #'doom/open-scratch-buffer
- "Switch to scratch buffer"    "X"   #'doom/switch-to-scratch-buffer
- "Bury buffer"                 "z"   #'bury-buffer
- "Kill buried buffers"         "Z"   #'doom/kill-buried-buffers)

*** <leader> c - code (lsp / lookup)

- "LSP Execute code action" "a" #'lsp-execute-code-action
- "LSP Organize imports" "o"    #'lsp-organize-imports
- "Jump to symbol in current workspace" "j"   #'consult-lsp-symbols
- "Jump to symbol in any workspace"     "J"   (cmd!! #'consult-lsp-symbols 'all-workspaces))

when :ui treemacs +lsp:
- "Errors list"                         "X"   #'lsp-treemacs-errors-list
- "Incoming call hierarchy"             "y"   #'lsp-treemacs-call-hierarchy
- "Outgoing call hierarchy"             "Y"   (cmd!! #'lsp-treemacs-call-hierarchy t)
- "References tree"                     "R"   (cmd!! #'lsp-treemacs-references t)
- "Symbols"                             "S"   #'lsp-treemacs-symbols
- "LSP"                                 "l"   #'+default/lsp-command-map
- "LSP Rename"                          "r"   #'lsp-rename

-----

- "Compile"                               "c"   #'compile
- "Recompile"                             "C"   #'recompile
- "Jump to definition"                    "d"   #'+lookup/definition
- "Jump to references"                    "D"   #'+lookup/references
- "Evaluate buffer/region"                "e"   #'+eval/buffer-or-region
- "Evaluate & replace region"             "E"   #'+eval:replace-region
- "Format buffer/region"                  "f"   #'+format/region-or-buffer
- "Find implementations"                  "i"   #'+lookup/implementations
- "Jump to documentation"                 "k"   #'+lookup/documentation
- "Send to repl"                          "s"   #'+eval/send-region-to-repl
- "Find type definition"                  "t"   #'+lookup/type-definition
- "Delete trailing whitespace"            "w"   #'delete-trailing-whitespace
- "Delete trailing newlines"              "W"   #'doom/delete-trailing-newlines
- "List errors"                           "x"   #'+default/diagnostics)

*** <leader> f - file

- "Open project editorconfig"   "c"   #'editorconfig-find-current-editorconfig
- "Copy this file"              "C"   #'doom/copy-this-file
- "Find directory"              "d"   #'+default/dired
- "Delete this file"            "D"   #'doom/delete-this-file
- "Find file in emacs.d"        "e"   #'doom/find-file-in-emacsd
- "Browse emacs.d"              "E"   #'doom/browse-in-emacsd
- "Find file"                   "f"   #'find-file
- "Find file from here"         "F"   #'+default/find-file-under-here
- "Locate file"                 "l"   #'locate
- "Find file in private config" "p"   #'doom/find-file-in-private-config
- "Browse private config"       "P"   #'doom/open-private-config
- "Recent files"                "r"   #'recentf-open-files
- "Rename/move file"            "R"   #'doom/move-this-file
- "Save file"                   "s"   #'save-buffer
- "Save file as..."             "S"   #'write-file
- "Sudo find file"              "u"   #'doom/sudo-find-file
- "Sudo this file"              "U"   #'doom/sudo-this-file
- "Yank file path"              "y"   #'+default/yank-buffer-path
- "Yank file path from project" "Y"   #'+default/yank-buffer-path-relative-to-project)

*** <leader> g - git/version control

- "Revert file"                 "R"   #'vc-revert
- "Copy link to remote"         "y"   #'+vc/browse-at-remote-kill
- "Copy link to homepage"       "Y"   #'+vc/browse-at-remote-kill-homepage

:when :ui vc-gutter
- "Revert hunk"               "r"   #'git-gutter:revert-hunk
- "Git stage hunk"            "s"   #'git-gutter:stage-hunk
- "Git time machine"          "t"   #'git-timemachine-toggle
- "Jump to next hunk"         "]"   #'git-gutter:next-hunk
- "Jump to previous hunk"     "["   #'git-gutter:previous-hunk

_Magit:_
- "Magit dispatch"            "/"   #'magit-dispatch
- "Magit file dispatch"       "."   #'magit-file-dispatch
- "Forge dispatch"            "'"   #'forge-dispatch
- "Magit switch branch"       "b"   #'magit-branch-checkout
- "Magit status"              "g"   #'magit-status
- "Magit status here"         "G"   #'magit-status-here
- "Magit file delete"         "D"   #'magit-file-delete
- "Magit blame"               "B"   #'magit-blame-addition
- "Magit clone"               "C"   #'magit-clone
- "Magit fetch"               "F"   #'magit-fetch
- "Magit buffer log"          "L"   #'magit-log-buffer-file
- "Git stage file"            "S"   #'magit-stage-file
- "Git unstage file"          "U"   #'magit-unstage-file

**** :prefix ("f" . "find")
- "Find file"                 "f"   #'magit-find-file
- "Find gitconfig file"       "g"   #'magit-find-git-config-file
- "Find commit"               "c"   #'magit-show-commit

# "Find issue"                "i"   #'forge-visit-issue
# "Find pull request"         "p"   #'forge-visit-pullreq

**** :prefix ("o" . "open in browser")
- "Browse file or region"     "o"   #'+vc/browse-at-remote
- "Browse homepage"           "h"   #'+vc/browse-at-remote-homepage
- "Browse remote"             "r"   #'forge-browse-remote
- "Browse commit"             "c"   #'forge-browse-commit
- "Browse an issue"           "i"   #'forge-browse-issue
- "Browse a pull request"     "p"   #'forge-browse-pullreq
- "Browse issues"             "I"   #'forge-browse-issues
- "Browse pull requests"      "P"   #'forge-browse-pullreqs

**** :prefix ("l" . "list")
- "List repositories"         "r"   #'magit-list-repositories
- "List submodules"           "s"   #'magit-list-submodules
- "List issues"               "i"   #'forge-list-issues
- "List pull requests"        "p"   #'forge-list-pullreqs
- "List notifications"        "n"   #'forge-list-notifications

**** :prefix ("c" . "create")
"Initialize repo"           "r"   #'magit-init
"Clone repo"                "R"   #'magit-clone
"Commit"                    "c"   #'magit-commit-create
"Fixup"                     "f"   #'magit-commit-fixup
"Branch"                    "b"   #'magit-branch-and-checkout
# "Issue"                     "i"   #'forge-create-issue
# "Pull request"              "p"   #'forge-create-pullreq)

*** <leader> i - insert

- "Current file name"             "f"   #'+default/insert-file-path
- "Current file path"             "F"   (cmd!! #'+default/insert-file-path t)
- "Evil ex path"                  "p"   (cmd! (evil-ex "R!echo "))
- "From evil register"            "r"   #'evil-ex-registers
- "Snippet"                       "s"   #'yas-insert-snippet
- "Unicode"                       "u"   #'insert-char
- "From clipboard"                "y"   #'+default/yank-pop

*** <leader> n - notes

- "Search notes for symbol"      "*" #'+default/search-notes-for-symbol-at-point
- "Org agenda"                   "a" #'org-agenda
- "Toggle last org-clock"        "c" #'+org/toggle-last-clock
- "Cancel current org-clock"     "C" #'org-clock-cancel

# (:when (featurep! :lang org +noter)
# :desc "Org noter"                  "e" #'org-noter)

- "Find file in notes"           "f" #'+default/find-in-notes
- "Browse notes"                 "F" #'+default/browse-notes
- "Org store link"               "l" #'org-store-link
- "Tags search"                  "m" #'org-tags-view
- "Org capture"                  "n" #'org-capture
- "Goto capture"                 "N" #'org-capture-goto-target
- "Active org-clock"             "o" #'org-clock-goto
- "Todo list"                    "t" #'org-todo-list
- "Search notes"                 "s" #'+default/org-notes-search
- "Search org agenda headlines"  "S" #'+default/org-notes-headlines

# TODO: what is this command below actually doing?:
- "View search"                  "v" #'org-search-view
- "Org export to clipboard"        "y" #'+org/export-to-clipboard
- "Org export to clipboard as RTF" "Y" #'+org/export-to-clipboard-as-rich-text

org +journal (prefix 'j'):
- "New Entry"           "j" #'org-journal-new-entry
- "New Scheduled Entry" "J" #'org-journal-new-scheduled-entry
- "Search Forever"      "s" #'org-journal-search-forever))

# org +roam2:
# (:prefix ("r" . "roam"):
# "Open random node"           "a" #'org-roam-node-random
# "Find node"                  "f" #'org-roam-node-find
# "Find ref"                   "F" #'org-roam-ref-find
# "Show graph"                 "g" #'org-roam-graph
# "Insert node"                "i" #'org-roam-node-insert
# "Capture to node"            "n" #'org-roam-capture
# "Toggle roam buffer"         "r" #'org-roam-buffer-toggle
# "Launch roam buffer"         "R" #'org-roam-buffer-display-dedicated
# "Sync database"              "s" #'org-roam-db-sync

# (:prefix ("d" . "by date")
# "Goto previous note"        "b" #'org-roam-dailies-goto-previous-note
# "Goto date"                 "d" #'org-roam-dailies-goto-date
# "Capture date"              "D" #'org-roam-dailies-capture-date
# "Goto next note"            "f" #'org-roam-dailies-goto-next-note
# "Goto tomorrow"             "m" #'org-roam-dailies-goto-tomorrow
# "Capture tomorrow"          "M" #'org-roam-dailies-capture-tomorrow
# "Capture today"             "n" #'org-roam-dailies-capture-today
# "Goto today"                "t" #'org-roam-dailies-goto-today
# "Capture today"             "T" #'org-roam-dailies-capture-today
# "Goto yesterday"            "y" #'org-roam-dailies-goto-yesterday
# "Capture yesterday"         "Y" #'org-roam-dailies-capture-yesterday
# "Find directory"            "-" #'org-roam-dailies-find-directory)))

*** <leader> o - open

- "Org agenda"       "A"  #'org-agenda
- "Default browser"    "b"  #'browse-url-of-file
- "Start debugger"     "d"  #'+debugger/start
- "New frame"          "f"  #'make-frame
- "Select frame"       "F"  #'select-frame-by-name
- "REPL"               "r"  #'+eval/open-repl-other-window
- "REPL (same window)" "R"  #'+eval/open-repl-same-window
- "Dired"              "-"  #'dired-jump

prefix ("a" . "org agenda"):
- "Agenda"         "a"  #'org-agenda
- "Todo list"      "t"  #'org-todo-list
- "Tags search"    "m"  #'org-tags-view
- "View search"    "v"  #'org-search-view

treemacs:
- "Project sidebar" "p" #'+treemacs/toggle
- "Find file in project sidebar" "P" #'treemacs-find-file)

vterm:
- "Toggle vterm popup"    "t" #'+vterm/toggle
- "Open vterm here"       "T" #'+vterm/here)

# (:when (featurep! :email mu4e)
# "mu4e" "m" #'=mu4e)

*** <leader> p - project

- "Browse project"               "." #'+default/browse-project
- "Browse other project"         ">" #'doom/browse-in-other-project
- "Run cmd in project root"      "!" #'projectile-run-shell-command-in-root
- "Async cmd in project root"    "&" #'projectile-run-async-shell-command-in-root
- "Add new project"              "a" #'projectile-add-known-project
- "Switch to project buffer"     "b" #'projectile-switch-to-buffer
- "Compile in project"           "c" #'projectile-compile-project
- "Repeat last command"          "C" #'projectile-repeat-last-command
- "Remove known project"         "d" #'projectile-remove-known-project
- "Discover projects in folder"  "D" #'+default/discover-projects
- "Edit project .dir-locals"     "e" #'projectile-edit-dir-locals
- "Find file in project"         "f" #'projectile-find-file
- "Find file in other project"   "F" #'doom/find-file-in-other-project
- "Configure project"            "g" #'projectile-configure-project
- "Invalidate project cache"     "i" #'projectile-invalidate-cache
- "Kill project buffers"         "k" #'projectile-kill-buffers
- "Find other file"              "o" #'projectile-find-other-file
- "Switch project"               "p" #'projectile-switch-project
- "Find recent project files"    "r" #'projectile-recentf
- "Run project"                  "R" #'projectile-run-project
- "Save project files"           "s" #'projectile-save-project-buffers
- "List project todos"           "t" #'magit-todos-list
- "Test project"                 "T" #'projectile-test-project
- "Pop up scratch buffer"        "x" #'doom/open-project-scratch-buffer
- "Switch to scratch buffer"     "X" #'doom/switch-to-project-scratch-buffer

*** <leader> q - quit/session

- "Restart emacs server"         "d" #'+default/restart-server
- "Delete frame"                 "f" #'delete-frame
- "Clear current frame"          "F" #'doom/kill-all-buffers
- "Kill Emacs (and daemon)"      "K" #'save-buffers-kill-emacs
- "Quit Emacs"                   "q" #'save-buffers-kill-terminal
- "Quit Emacs without saving"    "Q" #'evil-quit-all-with-error-code
- "Quick save current session"   "s" #'doom/quicksave-session
- "Restore last session"         "l" #'doom/quickload-session
- "Save session to file"         "S" #'doom/save-session
- "Restore session from file"    "L" #'doom/load-session
- "Restart & restore Emacs"      "r" #'doom/restart-and-restore
- "Restart Emacs"                "R" #'doom/restart

*** <leader> s - search

- "Search buffer"                "b"
- "Search all open buffers"      "B"
- "Search current directory"     "d" #'+default/search-cwd
- "Search other directory"       "D" #'+default/search-other-cwd
- "Search .emacs.d"              "e" #'+default/search-emacsd
- "Locate file"                  "f" #'locate
- "Jump to symbol"               "i" #'imenu
- "Jump to visible link"         "l" #'link-hint-open-link
- "Jump to link"                 "L" #'ffap-menu
- "Jump list"                    "j" #'evil-show-jumps
- "Jump to bookmark"             "m" #'bookmark-jump
- "Look up online"               "o" #'+lookup/online
- "Look up online (w/ prompt)"   "O" #'+lookup/online-select
- "Look up in local docsets"     "k" #'+lookup/in-docsets
- "Look up in all docsets"       "K" #'+lookup/in-all-docsets
- "Search project"               "p" #'+default/search-project
- "Search other project"         "P" #'+default/search-other-project
- "Jump to mark"                 "r" #'evil-show-marks
- "Search buffer"                "s" #'+default/search-buffer
- "Search buffer for thing at point" "S"
- "Dictionary"                   "t" #'+lookup/dictionary-definition
- "Thesaurus"                    "T" #'+lookup/synonyms)

*** <leader> w - window

"C-u/r"     #'winner-undo/redo

;; Navigation
- "h/j/k/l"     #'evil-window-left/down...
- "w"     #'other-window

;; Extra split commands
- "S"       #'+evil/window-split-and-follow
- "V"       #'+evil/window-vsplit-and-follow

;; Swapping windows
- "H/J/K/L"       #'+evil/window-move-left/down...
- "C-S-w"   #'ace-swap-window

prefix "m"
- "m"       #'doom/window-maximize-buffer
- "v"       #'doom/window-maximize-vertically
- "s"       #'doom/window-maximize-horizontally

;; Delete window
- "d"       #'evil-window-delete
- "C-C"     #'ace-delete-window
- "T"       #'tear-off-window

*** <leader> t - toggle

- "Big mode"                     "b" #'doom-big-font-mode
- "Fill Column Indicator"        "c" #'global-display-fill-column-indicator-mode
- "Flymake"                      "f" #'flycheck-mode
- "Frame fullscreen"             "F" #'toggle-frame-fullscreen
- "Evil goggles"                 "g" #'evil-goggles-mode
- "Indent style"                 "I" #'doom/toggle-indent-style
- "Line numbers"                 "l" #'doom/toggle-line-numbers
- "Read-only mode"               "r" #'read-only-mode
- "Spell checker"              "s" #'spell-fu-mode)
- "Soft line wrapping"           "w" #'visual-line-mode

indent-guides:
- "Indent guides"              "i" #'highlight-indent-guides-mode

# :when (featurep! :editor word-wrap)
#  "Soft line wrapping"         "w" #'+word-wrap-mode

zen:
- "Zen mode"                   "z" #'+zen/toggle
- "Zen mode (fullscreen)"      "Z" #'+zen/toggle-fullscreen

*** APPs
**** <leader> M - mu4e
- "Open email app" "M" #'=mu4e
- "Compose email"  "c" #'+mu4e/compose)

**** <leader> I - IRC

- "Open irc app"       "I" #'=irc
- "Next unread buffer" "a" #'tracking-next-buffer
- "Quit irc"           "q" #'+irc/quit
- "Reconnect all"      "r" #'circe-reconnect-all
- "Send message"       "s" #'+irc/send-message
- "Jump to channel"  "j" #'+irc/vertico-jump-to-channel

*** Other for now not used stuff presented in that source file

~C-f~ for /remote/ in source file - ssh utility

** ported from [[https://github.com/tpope/vim-unimpaired][vim-unimpaired]]

Complementary pairs of mappings:
- :n  ~] SPC~ / ~[ SPC~  #'+evil/insert-newline-below/above
- :n  ~]b~ / ~[b~   #'next-buffer / 'previous-buffer
- :n  ~]f~ / ~[f~   #'+evil/next-file / '+evil/previous-file
- :m  ~]u~ / ~[u~   #'+evil:url-encode / '+evil:url-decode
- :m  ~]y~ / ~[y~   #'+evil:c-string-encode / '+evil:c-string-decode

(:when (featurep! :lang web)
- :m ~]x~ / ~[x~  #'+web:encode-html-entities / '+web:decode-html-entities)

(:when (featurep! :ui vc-gutter)
- :m ~]d~ / ~[d~  #'git-gutter:next-hunk / 'git-gutter:previous-hunk)

(:when (featurep! :ui hl-todo)
- :m ~]t~ / ~[t~  #'hl-todo-next / 'hl-todo-previous)

(:when (featurep! :ui workspaces)
- :n ~gt~ / ~gT~  #'+workspace:switch-next / '+workspace:switch-previous
- :n ~]w~ / ~[w~  #'+workspace/switch-right / '+workspace/switch-left)

Custom vim-unmpaired-esque keys:
- :m  ~]#~ / ~[#~   #'+evil/next/prev-preproc-directive
- :m  ~]a~ / ~[a~   #'evil-forward-arg / 'evil-backward-arg
- :m  ~]c~ / ~[c~   #'+evil/next-comment / '+evil/previous-comment
- :m  ~]e~ / ~[e~   #'next-error / 'previous-error
- :n  ~]F~ / ~[F~   #'+evil/next-frame / '+evil/previous-frame
- :m  ~]h~ / ~[h~   #'outline-next/prev-visible-heading
- :m  ~]m~ / ~[m~   #'+evil/next/prev-beginning-of-method
- :m  ~]M~ / ~[M~   #'+evil/next-end-of-method / '+evil/previous-end-of-method
- :n  ~[o~ / ~]o~   #'+evil/insert-newline-above / '+evil/insert-newline-below
- :n  ~gp~   #'+evil/reselect-paste / '+evil/alt-paste
- :v  "gp" #'+evil/paste-preserve-register
- :n  "gQ" #'+format:region
- :v  "@"  #'+evil:apply-macro
- :nv "g@"    #'+evil:apply-macro
- :nv "gc"    #'evilnc-comment-operator
- :nv "gO"    #'imenu
- :nv "gx"    #'evil-exchange
- :nv "gy"    #'+evil:yank-unindented
- :n  ~g=~ / ~g-~   #'evil-numbers/inc/dec-at-pt
- :v  ~g=~ / ~g-~   #'evil-numbers/inc/dec-at-pt-incremental
- :v  "g+"    #'evil-numbers/inc-at-pt

Other stuff:
- (:after helpful :n "gr" #'helpful-update)
- (:after compile :n "gr" #'recompile)
- (:after dired :n "gr" #'revert-buffer)

* packages
** git [[file:~/.emacs.d/modules/tools/magit/README.org::*Plugins][#plugins]]

[[https://magit.vc/manual/forge/][forge]] - for now can't set it up, view [[https://github.com/magit/forge/discussions/432][this discussion]]. ([[https://www.youtube.com/watch?v=fFuf3hExF5w&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj&index=20][quick vid tut]])

[[https://github.com/emacsmirror/git-timemachine][git-timemachine]] - view file =x= time ago; ~SPC h b b timemachine~ for kbds. ~SPC g
t~ to toggle mode.

[[https://github.com/rmuslimov/browse-at-remote][browse at remote]] - easiest way to open particular link on
github/gitlab/bitbucket/stash/git.savannah.gnu.org/sourcehut from Emacs:
- ~SPC g Y~ - Copy homepage URL of current project to clipboard.
- ~SPC g y~ - Copy URL to current file (and line if selection is active) to
  clipboard.
- ~SPC g o h~ - Open homepage for current project in browser.
- ~SPC g o o~ - Open URL to current file (and line if selection is active) in
  browser

*magit-gitflow* - [[https://github.com/petervanderdoes/gitflow-avh][gitflow]] plugin for magit.el; Press ~%~ in magit status buffer and
you will be presented with the gitflow popup menu

** evil [[file:~/.emacs.d/modules/editor/evil/README.org::*Features][#features]]

[[https://github.com/emacs-evil/evil-collection][evil-collection]] - plugin used as a foundation for flag =+everywhere=, which
enables evilified keybinds everywhere possible.

[[https://github.com/PythonNut/evil-easymotion][evil-easymotion]] - ~gs ..~ and watch what hints give u (ther's lots there, ie ~gs
spc~); also - [[https://www.youtube.com/watch?v=zar4GsOBU0g&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj&index=8][quick vid]] tutorial. When given a selection type ~?~ to see possible
command modifier /(kill-move, kill-stay, teleport, mark, yank ...)/. Look for
commands by starting with =evilem=. (~SPC m b b evilem~). Also:
- "a" (evilem-create #'evil-forward-arg)
- "A" (evilem-create #'evil-backward-arg)
- "s" #'evil-avy-goto-char-2
- "SPC" / "/" - #'evil-avy-goto-char-timer))

[[https://github.com/emacs-evil/evil-surround#usage][evil-surround]] - ~ys~, ~cs~, ~ds~ .. Also:
- :v "S" #'evil-surround-region
- :o "s" #'evil-surround-edit
- :o "S" #'evil-Surround-edit

[[https://github.com/hlissner/evil-multiedit#usage][evil-multiedit]] - ~M-d / D~ , ~RET~ to exclude, ~C-M-D~ to restore last group. Ex
command that allows to invoke evil-multiedit with a regular expression -
=ie[dit]=. There is also a [[https://www.youtube.com/watch?v=zXdT5jY_ui0&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj&index=8][quick vid tut]]. Also ~R~ - #'evil-multiedit-match-all.

_evil-mc_ - ~gz~ prefix. Which-key available, so u can c which kbds r there. Or ~SPC
h b b~ -> /evil-mc/... Or:
- ~d/D~ - #'evil-mc-make-and-goto-next/prev-match
- ~j/k~ - #'evil-mc-make-cursor-move-next/prev-line
- ~m~ - #'evil-mc-make-all-cursors
- ~n/N~ - #'evil-mc-make-and-goto-next/last-cursor
- ~p/P~ - #'evil-mc-make-and-goto-prev/first-cursor
- ~q~ - #'evil-mc-undo-all-cursors
- ~t~ - #'+multiple-cursors/evil-mc-toggle-cursors
- ~u~ - #'+multiple-cursors/evil-mc-undo-cursor
- ~z~ - #'+multiple-cursors/evil-mc-toggle-cursor-here
- ~I~ - #'evil-mc-make-cursor-in-visual-selection-beg
- ~A~ - #'evil-mc-make-cursor-in-visual-selection-end

_evil-nerd-commenter_ - comment any viable /text objects/ (below). ~gc {motion}~
Inobvious keys after it:
- l/c - line
- r - region
- . - ? -- evilnc-copy-and-comment-operator ?
- \ - comment current line and enter insert mode on point

[[https://github.com/edkolev/evil-lion#usage][evil-lion]] - allows to align text by some CHAR; ~gl/L {motion} {char}~

evil-numbers - works like C-a/C-x in vim, but here it is ~g-/g=~

evil-exchange - ~gx {motion}~ - exchange two regions with evil motion

[[file:~/.emacs.d/modules/editor/evil/README.org::*Custom Text Objects][Custom Text Objects]]

** Development

- [[https://github.com/emacs-lsp/lsp-mode][lsp]] - [[https://emacs-lsp.github.io/lsp-mode/tutorials/CPP-guide/][tutorial]], ~SPC c l~ - prefix ([[file:~/.emacs.d/modules/tools/lsp/README.org::*Features][lsp doom features]]).

[[https://github.com/hlissner/doom-snippets][snippets and how to use / write them]]
- :i  [C-tab] #'aya-expand
- :nv [C-tab] #'aya-create

*** JS [[file:~/.emacs.d/modules/lang/javascript/README.org::*Commands][#commands]] (js2-mode / tide / js2-refactor / skewer-mode / npm-mode)
*** eval [[file:~/.emacs.d/modules/tools/eval/README.org::*Features][#features]]

instead of opening console in all browser tabs...

- :nv "gr"  #'+eval:region
- :n  "gR" / ~M-r~ - #'+eval/buffer
- :v  "gR"  #'+eval:replace-region

*** lookup [[file:~/.emacs.d/modules/tools/lookup/README.org::*Features][#features]]

- :nv "K"   #'+lookup/documentation
- :nv "gd"  #'+lookup/definition
- :nv "gD"  #'+lookup/references
- :nv "gf"  #'+lookup/file
- :nv "gI"  #'+lookup/implementations
- :nv "gA"  #'+lookup/assignments

- K (+lookup/documentation)               - Show documentation for IDENTIFIER (defaults to sy...
- SPC s T (+lookup/synonyms)              - Look up and insert a synonym for the word at poin...
- SPC s t (+lookup/dictionary-definition) - Look up the definition of the word at point (or s...
- SPC s K (+lookup/in-all-docsets)        - TODO
- SPC s k (+lookup/in-docsets)            - Lookup QUERY in dash DOCSETS.
- SPC s O (+lookup/online-select)         - Run ‘+lookup/online’, but always prompt for the p...
- SPC s o (+lookup/online)                - Look up QUERY in the browser using PROVIDER.
- SPC c t (+lookup/type-definition)       - Jump to the type definition of IDENTIFIER (defaul...
- SPC c k (+lookup/documentation)         - Show documentation for IDENTIFIER (defaults to sy...
- SPC c i (+lookup/implementations)       - Jump to the implementations of IDENTIFIER (defaul...
- SPC c D (+lookup/references)            - Show a list of usages of IDENTIFIER (defaults to ...
- SPC c d (+lookup/definition)            - Jump to the definition of IDENTIFIER (defaults to...
- SPC h O (+lookup/online)                - Look up QUERY in the browser using PROVIDER.

** Navigation
*** window-select [[file:~/.emacs.d/modules/ui/window-select/README.org::*Description][#description]]

avy for windows switching ~spc w C-w~ / ~C-w C-w~

*** [[file:~/.emacs.d/modules/ui/workspaces/README.org::*Commands & Keybindings][workspaces]] - besides =spc tab..= :
- ~C-t~   #'+workspace/new
- ~C-S-t~ / ~spc tab tab~ #'+workspace/display
- ~M-{number}~   #'+workspace/switch-to-{number}

*** dired [[file:~/.emacs.d/modules/emacs/dired/README.org::*Keybindings][#kbds]]

[[https://www.youtube.com/watch?v=oZSmlAAbmYs&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj&index=3][short vid]]

Move with h, j, k, l, where h & l are 'up' & 'down' directory

- SPC f d - Find directory with dired
- C-c C-r - Run dired-rsync
- C-c C-e - Rename entries with wdired

-----

- ~M~ - change permissions
- ~o~ - sort by modes.
- ~O~ - change the owner.
- ~SPC .~ - create or find a file
- ~*~ - select all directories.
- ~C~ - copy to another window
- ~R~ - move to another window
- ~i~ - edit file/dir name

** Completion

~M-/~ - #'dabbrev-expand - Expand previous word "dynamically".

*** company [[file:~/.emacs.d/modules/completion/company/README.org::*Code completion][#Code completion]] ~C-SPC~ to trigger completion.

~C-SPC/@~ - (cmds! (not (minibufferp)) #'company-complete-common)

=:map company-active-map=:
# "C-w"     nil  ; don't interfere with `evil-delete-backward-word'
- ~C-n/p~ / ~C-j/k~ - #'company-select-next/previous
- ~C-h~   -         #'company-show-doc-buffer
- ~C-u/d~ -         #'company-previous/next-page
- ~C-s~   -         #'company-filter-candidates
- ~C-S-s~ - (cond ((featurep! :completion vertico)  #'completion-at-point)
- ~C-SPC~     #'company-complete-common
- ~TAB~       #'company-complete-common-or-cycle
- [backtab] #'company-select-previous
- ~C-s~       #'company-filter-candidates (=company-search-map=)

Omni-completion :prefix "C-x":
- :i "C-l"    #'+company/whole-lines
- :i "C-k"    #'+company/dict-or-keywords
- :i "C-f"    #'company-files
- :i "C-]"    #'company-etags
- :i "s"      #'company-ispell
- :i "C-s"    #'company-yasnippet
- :i "C-o"    #'company-capf
- :i "C-n"    #'+company/dabbrev
- :i "C-p"    #'+company/dabbrev-code-previous

*** vertico [[file:~/.emacs.d/modules/completion/vertico/README.org::*Vertico keybindings][#kbds]]

- ~M-RET~   - #'vertico-exit-input
- ~C-SPC~   - #'+vertico/embark-preview
- ~C-j/k~   - #'vertico-next/previous
- ~C-M-j/k~ - #'vertico-next/previous-group
# embark - Emacs Mini-Buffer Actions Rooted in Keymaps (spc h i)
- =C-;= or =<leader> a= - Open an ~embark-act~ menu to chose a useful action
- =C-c C-;= - export the current candidate list to a buffer
- C-c C-e - export to writable buffer (to replace multiple occurences)

| Input        | Description                              |
|--------------+------------------------------------------|
| =!foo=         | match without literal input =foo=          |
| =%foo= or =foo%= | perform ~char-fold-to-regexp~ on input =foo= |
| =`foo= or =foo`= | match input =foo= as an initialism         |
| ==foo= or =foo== | match only with literal input =foo=        |
| =~foo= or =foo~= | match input =foo= with fuzzy/flex matching |

*** syntax [[file:~/.emacs.d/modules/checkers/syntax/README.org::*Features][#flycheck-features]]

Most of flycheck's features are under =C-c !=, regardless of whether evil mode is
used.

Evil Specific:
- SPC t f - Toggle Flycheck
- SPC c x - List errors
- ] e     - Next error
- [ e     - Prevous error

*** spell (dictionary) [[file:~/.emacs.d/modules/checkers/spell/README.org::+TITLE: checkers/spell][#source]] [[https://gitlab.com/ideasman42/emacs-spell-fu][spell-fu]]

Flycheck might be slow and won't be running automatically as of emacs 28, that's
why i use default option - /spell-fu/.

Dictionary is set by =ispell-dictionary= variable. Can be changed locally with the
function =ispell-change-dictionary=.

For now i removed spell from my init & config files cuz don't need those.
Settings i used (besides having /aspell, aspell-en, aspell-ru/ installed on pc):
#+begin_src elisp
(after! spell-fu
  (setq spell-fu-idle-delay 0.5))  ; default is 0.25
(setq-default ispell-dictionary "en")
#+end_src

Evil already defines 'z=' to `ispell-word' = correct word at point

- :n  "zg"   #'+spell/add-word
- :n  "zw"   #'+spell/remove-word
- :m  "[s"   #'+spell/previous-error
- :m  "]s"   #'+spell/next-error)

** Utility
- [[https://github.com/tecosaur/emacs-everywhere#usage][everywhere]] - Invoke Emacs everywhere
- [[file:~/.emacs.d/modules/ui/popup/README.org::*Commands][popup]]:
  + C-~ (+popup/raise) - Raise the current popup window into a regular window
  + C-` (+popup/toggle) - Toggle any visible popups.
  + SPC ~  (+popup/toggle) - Toggle any visible popups.
  + C-x p  (+popup/other) - Cycle through popup windows, like ‘other-window’....
- [[file:~/.emacs.d/modules/tools/editorconfig/README.org::*Features][editorconfig]]
- better-jumper, [[https://github.com/gilbertw1/better-jumper#comparison-with-evil-jump][here]] is it's comparison to evil-jump. Basically its ~C-i / o~
  functionality. But if u type ~M-x better-..~ u will get all its possible
  functions, among which is =better-jumper-jump-newest=, which doesn't have kbd,
  but jus keep it in mind. Nothing else interesting there.
- =evil-quick-diff= - used to diff and edit two separate blocks of text.
- [[https://github.com/hlissner/doom-emacs/blob/develop/modules/tools/pass/README.org#description][pass]] - ~M-x pass~; view [[https://git.zx2c4.com/password-store/about/][pass man page]]
- [[https://github.com/hlissner/doom-emacs/blob/develop/modules/term/vterm/README.org][vterm]] - new terminal
- [[https://github.com/emacsmirror/undo-tree/blob/master/undo-tree.el][undo-tree]] (shortcuts bit below in doc.)
- [[https://www.emacswiki.org/emacs/AproposMode][apropos-mode]] - obtain information about the Emacs entities that match a
  regular expression (regexp) or keywords that you type.

*** Info
#+begin_comment
Info files are created from Texinfo source files. You can use the same source
file to make a printed manual or produce other formats, such as HTML and
DocBook.

The ‘makeinfo’ command converts a Texinfo file into an Info file;
‘texinfo-format-region’ and ‘texinfo-format-buffer’ are GNU Emacs functions that
do the same.
#+end_comment

~SPC h i~ (info) - Enter Info, the documentation browser. _Numeric prefix_ to this
command switches / creates Info buffer with that number. (They r *independent*)

~M-h~ (Info-help) - Enter the Info tutorial.

~g ?~ (Info-summary) - Display a brief summary of all Info commands.

_Basics:_
- ~g k/j~ or ~C-k/j~ (Info-prev/next) - Go to the "previous/next" node, but C-k/j
  also counts nesting.
- ~g [ / ]~ or ~TAB / S-TAB~ (Info-prev/next-reference) - Move cursor to the
  previous/next cross-reference (link)
- ~g m~ (Info-menu) - Go to the node pointed to by the menu item.
- ~u~ (Info-up) - Go to the superior node of this node.
- ~C-o/t~ (Info-history-back) - Go back in the history
- ~TAB~ (Info-history-forward) - Go forward in the history (_doesn't work_)
- ~i~ (*Info-index*) - You can get to the index from the main menu of the file with
  the ‘m’ command and the name of the index node; then you can use the ‘m’
  command again in the index node to go to the node that describes the topic you
  want. ~i~ is just a short-cut, which does all of that for u. It searches the
  index for a given topic (a string) and goes to the node which is listed in the
  index for that topic. *Very powerful command, lets u get info on any
  'mode'-related thing*.
- ~I~ (Info-virtual-index) - behaves like ‘i’, but constructs a virtual info node
  displaying the results of an index search, making it easier to select the one
  you want.
- ~g L~ (Info-history) - Go to a node with a menu of visited nodes.
- ~d~ (Info-directory) - Go to the Info directory node. Which is the first one you
  saw when you entered Info, has a menu which leads (directly or indirectly,
  through other menus)
- ~g t~ (Info-top-node) - command moves to the ‘Top’ node of the *manual*.
- ~g T~ (Info-toc) - Go to a node with table of contents of the c...

_Advanced:_
- ~a~ (info-apropos) - If you aren’t sure which manual documents the topic you are
  looking for. It prompts for a string and then looks up that string in *all* the
  indices of *all* the Info documents installed on your system.
- ~g G~ (Info-goto-node) - If you know a node’s name, you can go there using this
  command. ~gTop<RET>~ is same as ~g t~ (info-top-node).
- ~g 1..9~ (Info-nth-menu-item) - Go to the node of the Nth menu item. They are
  short for the ‘m’ command together with a name of a menu subtopic.
- ~M-n~ (clone-buffer) - creates a new *independent* Info buffer. The new buffer
  starts out as an exact copy of the old one, but you will be able to move
  independently between nodes in the two buffers.
- ~SPC h 4 i~ (info-other-window) - Like ‘info’ but show the Info buffer in
  anoter window

#+CAPTION: produce new Info buffers
#+begin_comment
In Emacs Info, you can also produce new Info buffers by giving a numeric prefix
argument to the ‘m’ and ‘g’ commands. ‘C-u m’ and ‘C-u g’ go to a new node in
exactly the same way that ‘m’ and ‘g’ do, but they do so in a new Info buffer
which they select in another window.

Or use a numeric prefix argument for the ‘C-h i’ command (‘info’) which switches
to the Info buffer with that number. Thus, ‘C-u 2 C-h i’ switches to the buffer
‘*info*<2>’, creating it if necessary.
#+end_comment

To look up Info-mode _variables_ go ~SPC h i~ -> ~g m~ -> Info -> ~g G Variables~

- ~f~ :: following cross reference (part 1.7 of ~M-h~)
- f? :: list all references in cur. node

*** mu4e
~spc o m~ - start mu4e email client

couldn't make it work, here r some links:

[[https://yamadharma.github.io/ru/post/2021/01/22/mail-synchronization-mbsync/#синхронизация][main source (rus)]], [[https://www.youtube.com/watch?v=yZRyEhi4y44][system crafters 1]], [[https://www.youtube.com/watch?v=olXpfaSnf0o][system crafters 2]], [[https://isync.sourceforge.io/mbsync.html][mbsync config
documentation]], [[https://help.mail.ru/mail/mailer/popsmtp][mail ru official]]

/Also don't worket about [[https://github.com/iqbalansari/mu4e-alert][mu4e-alert]] and org-msg (~s o~ that)/

*** EWW
_While in normal mode:_
- & (eww-browse-with-external-browser) - in case of trouble viewing a website
  with EWW
- H/L (eww-back/forward-url)
- R (eww-readable) - attampt to determine which part of the doc contains the
  'readable' text, and will only display this part. This usually gets rid of
  menus and the like.
- U (eww-top-url)
- ^ (eww-up-url)
- d (eww-download) - download URL (link at cursor otherwise current page).
  Directory for downloading lies within =eww-download-directory=
- g (Prefix Command)
- m (eww-add-bookmark)
- o (eww)
- q (quit-window)
- r (eww-readable)
- u (eww-up-url)
- Z Q(Z) (quit-window)
- [ [ / ] ] (eww-previous/next-url)
- *z* d (eww-toggle-paragraph-direction)
- z e (eww-set-character-encoding)
- z f (eww-toggle-fonts)
- *g* b (eww-list-bookmarks)
- g c (url-cookie-list)
- g h (eww-list-histories) - list browsing history. The history is lost when EWW
  is quit. If you want to remember websites - use bookmarks. History limit is
  stored in =eww-history-limit= var.
- g j/k (eww-next/previous-url)
- g o (eww-browse-with-external-browser)
- g t (eww-list-buffers) - get summary of currently opened EWW buffers

-----

- S-SPC        scroll-down-command
- <S-return>   eww-browse-with-external-browser
- <backspace>  eww-back-url
- <backtab>    shr-previous-link
- <tab>        shr-next-link

- C-M-i  shr-previous-link
- M-RET  eww-open-in-new-buffer - open URL at point in new buffer
- M-C eww-toggle-colors - toggle whether to use HTML-specified colors or not.
  (=shr-use-colors= variable)
- M-n eww-next-bookmark
- M-p eww-previous-bookmark

Hotkeys below are the default hotkeys, but they r shadowed by evil everywhere.
But they r relevant if u enter 'insert mode' in eww buffer:
#+begin_comment
TAB (shr-next-link)
C (url-cookie-list)
D (eww-toggle-paragraph-direction)
E (eww-set-character-encoding)
G (eww)
H (eww-list-histories)
S (eww-list-buffers)
b (eww-add-bookmark)
g (eww-reload)
h (describe-mode)
l/n (eww-back/next-url)
p/r (eww-previous/forward-url)
s (eww-switch-to-buffer)
t (eww-top-url)
v (eww-view-source)
w (eww-copy-page-url) - copy current page's url to kill ring
DEL (scroll-down-command)
<delete> (scroll-down-command)
#+end_comment

*** Nov [[https://depp.brause.cc/nov.el/][#docs]]

SPC - scroll
n / p - switch chapters
DEL / S-SPC (nov-scroll-down) - Scroll with ‘scroll-down’ or visit prev...
RET (nov-browse-url)          - Follow an external url with ‘browse-url’.
i / t (nov-goto-toc)          - Go to the Table Of Contents index
~C(M)-k/j~ / ~[ [~ / ~] ]~ / ~g k/j~  - Go to the previous/next document
g ? (nov-display-metadata)    - View the metadata of the EPUB document ...
*** Emms [[https://www.gnu.org/software/emms/][#docs]] [[https://www.gnu.org/software/emms/manual/][#manual]]
#+begin_quote
Emms can run as a minimalist player and controlled with a handful of M-x Emacs
commands, or a fully-fledged, interactive media browser. Emms can display album
art, play streaming audio, tag music files, search for lyrics, provide MPD
connectivity, control the volume, and more.
#+end_quote

** Basic Commands

- emms-play-file file - If called with a prefix the file will be added like
  'emms-add-file'.
- emms-add-file file - If called with a prefix the file will be played like
  'emms-play-file'.
- emms-play/add-directory dir
- emms-play/add-directory-tree dir - .. or the value of
  EMMS-SOURCE-FILE-DEFAULT-DIRECTORY.
- emms-play/add-url url - A source for an URL - for example, for streaming.
- emms-play/add-playlist playlist - A source for the M3u or PLS playlist format
  from the file PLAYLIST.
- emms-play/add-find dir regexp - A source that will find files in DIR or
  EMMS-SOURCE-FILE-DEFAULT-DIRECTORY which match REGEXP.

_Playback commands:_
- emms-start - Start playing the current playlist
- emms-stop - Stop playing
- emms-next - Start playing the next track in the playlist
- emms-previous - Start playing previous track in the playlist
- emms-shuffle - Shuffle the current playlist. This uses
  EMMS-PLAYLIST-SHUFFLE-FUNCTION.
- emms-sort - Sort the current playlist. This uses EMMS-PLAYLIST-SORT-FUNCTION.
- emms-show &optional insertp - Describe the current Emms track in the
  minibuffer. If INSERTP is non-nil, insert the description into the current
  buffer instead. This function uses EMMS-SHOW-FORMAT to format the current
  track.

=emms-show-all= - pop up a window with the complete information about the track
being played.


* unused kbds

*Q*, C-; spc-ret spc-l spc-k spc-j spc-d
