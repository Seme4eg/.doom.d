;;; ewal.el --- -*- lexical-binding: t; -*-
;;;
;;; Commentary:
;;; Most of the code is borrowed from https://github.com/cyruseuros/ewal.
;;;

;;; Code:

(require 'doom-themes)

(defvar ewal-base-palette nil
  "Current base palette generated by pywal.")

;;;###autoload
(defun ewal-load-colors ()
  "Load `ewal-base-palette' from generated palette file."
  (with-temp-buffer
    (insert-file-contents "~/.cache/wal/palette.el")
    (eval-buffer)))

(defun ewal-get-color (color &optional shade)
  "Get an `ewal' color.
Return SHADE of COLOR. SHADE being a float between -1 and 1 where -1 is darker,
1 is lighter."
  (let ((color (alist-get color ewal-base-palette))
        (shade (or shade 0)))
    (if (> shade 0)
        (doom-lighten color shade)
      (doom-darken color (abs shade)))))

;;;###autoload
(defun ewal-evil-cursors-set-colors ()
  "Load ewal colors and apply `ewal-evil-cursors' colors to Emacs."
  (setq
   evil-normal-state-cursor `(,(ewal-get-color 'cursor 0) box)
   evil-insert-state-cursor `(,(ewal-get-color 'green 0) (bar . 2))
   evil-emacs-state-cursor `(,(ewal-get-color 'blue 0) box)
   evil-visual-state-cursor `(,(ewal-get-color 'white -0.3) (hbar . 2))
   evil-motion-state-cursor `(,(ewal-get-color 'magenta 0) box)
   evil-replace-state-cursor `(,(ewal-get-color 'red 0.3) (hbar . 2))))

;;;###autoload
(when (and (boundp 'custom-theme-load-path)
           load-file-name)
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory
                (file-name-directory load-file-name))))

(provide 'ewal)

;;; ewal.el ends here
