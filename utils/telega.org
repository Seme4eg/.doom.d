#+TITLE: Telega

- [[https://github.com/zevlg/telega.el/blob/master/docs/telega-manual.org][manual]], or [[file:~/dotfiles/.config/emacs/.local/straight/repos/telega.el/docs/telega-manual.org][this local file]] (same)
- [[https://zevlg.github.io/telega.el/][#docs]] [[file:~/.config/emacs/.local/straight/repos/evil-collection/modes/telega/evil-collection-telega.el][evil-collection-telega.el]]
- =C-c /= - telega-chatbuf-filter - [[https://github.com/zevlg/telega.el/blob/master/docs/telega-manual.org#filtering-chat-messages-aka-shared-media][filtering]], same as search in mobile app -
  filter all messages based on some query
- @gif <query> - find some gifs to send (=telega-known-inline-bots= var to see
  available bots)

_Sorting Chats_, ~\\~ prefix

[[elisp:(helpful-variable 'telega-prefix-map)][telega-prefix-map]] (~C-c t~ in my case) & ~g a~ prefix:

S (telega-msg-save) Save messagesâ€™s MSG media content to a file.

- Rootbuf view switching (~g V~ or =telega-view-*= commands)
  - User Option: telega-root-default-view-function - Default view for the rootbuf. Default value: telega-view-default

_Keybindings from prefix work here with ~g a~ prefix!_ (like ~g a t~ to get back to
root view)

- C-c ? (telega-*describe-chat*) Show info about chat at point.
- ~g ?~ / ~h~ (telega-describe-message) get detailed description of the message
  at point.
- Z R (telega-msg-*resend*)
- Z L (telega-msg-*redisplay*) Redisplay the message MSG.
- Z l (telega-msg-*copy-link*) Copy link to message to kill ring.
- Z y (telega-msg-*copy-text*) Copy a text of the message MSG.

Important customizable options:
=telega-chat-fill-column= - Column to fill chat messages to. (Default value: 70)

~g A~ / ~M-g~ prefix in chatbuf is used to jump across various chat messages:
- ~<~ - history beginning
- ~r~, ~>~ (telega-chatbuf-*read-all*) Jump to the last message in the chat history
  and mark all messages as read. If C-u is used, then reset active messages
  filter.
- ~@~, ~m~ (telega-chatbuf-*next-unread-mention*) Goto next unread mention in chat
  buffer.
- ~u~ (telega-chatbuf-*next-unread*) Goto next uneard message in chat.
  BUTTON-CALLBACK - callback to call with single argument - message button.
- ~^~, ~P~ (telega-chatbuf-*goto-pinned-message*) Goto next pinned message for the
  chatbuffer.
- ~x~ (telega-chatbuf-*goto-pop-message*) Pop message from
  =telega-chatbuf--messages-pop-ring= and goto it.
- ~*~ (telega-chatbuf-*next-favorite*) Goto next favorite message.
- ~!~, ~d~ (telega-chatbuf-*goto-date*) Goto last message before DATE timestamp.
- ~v~ (telega-chatbuf-*goto-video-chat*) Goto video chat associated with the chat.

~C-M-a~ (telega-chatbuf-*beginning-of-thing*) Move backward to the beginning of the
chat

[[https://github.com/zevlg/telega.el/blob/master/docs/telega-manual.org#sending-ordinary-messages][using markup + syntax]] or see [[file:~/dotfiles/.config/emacs/.local/straight/repos/telega.el/docs/telega-manual.org][this file]]

Only for _supergroups_:
- = (telega-msg-diff-edits) Display edits to MSG user did
- t (telega-msg-open-thread) Open thread initiated by MSG.

* Attaching media, ~C-c / Z~ prefix
- ~C-a~ / ~a~ (=telega-chatbuf-attach=) Attach something to the chatbuf input. C-u is
  passed directly to the attachment function. See telega-chat-attach-commands
  for available attachment types.
- ~C-f~ / ~f~ (=telega-chatbuf-attach-media=) Attach FILENAME as media, detecting media
  type by FILENAME extension. If C-u is given, then attach as file.
- ~C-v~ / ~v~ (=telega-chatbuf-attach-clipboard=) Attach clipboard image to the chatbuf as
  photo. If C-u is given, then attach clipboard as document.

* Replying and editing messages
- r (telega-msg-reply) to reply
- i (telega-msg-edit) accepts C-u prefix to edit message as-is without using
  markup attachment with markup name specified in this option.
- C-c C-k - cancel. With C-u prefix chatbuf's input is also canceled.
- M-n/p (telega-chatbuf-edit-next/prev) Edit message sent next/prev to currently
  editing. It is possible to edit message with markup text inside -
  =telega-msg-edit-markup-spec=

* Forwarding messages
- R - telega-msg-forward-marked-or-at-point
- F - telega-msg-forward-marked-or-at-point-to-multiple-chats

_Options_ how you can affect the way a message is forwarded:
- ~C-u R~ - forward a message copy, it will look like you sent a message.
- ~C-u C-u R~ - forward a message copy deleting or replacing caption it has. Use
  this to forward media message with your own caption.

* Deleting messages
=telega-chat-show-deleted-messages-for= - Chat Filter for chats where to show
deleted messages in chatbuf. (Default value: nil)

For _example_, to show deleted messages in all chats except for "Saved Messages",
use next: ~(setq telega-chat-show-deleted-messages-for '(not saved-messages))~

* Scheduling messages and reminders
C-c C-a scheduled RET, select date and time to schedule message at, type text of
a message and send it as always.

Message scheduled in "Saved Messages" chat is called _reminder_.

Whenever a scheduled message or reminder is sent, you get a special notification
marked with a ðŸ“…, so you don't get caught off-guard by messages you planned in
the past.

* Navigating previous input
You can navigate your previous chatbuf input using commands:
- ~M-p~ (=telega-chatbuf-edit-prev=) Edit previously sent message. If C-u is given,
  then just copy last sent message.
- ~M-r~ (=telega-chatbuf-input-search=) Search for REGEX in chat input history.

While _searching input_, you can use M-p (telega-chatbuf--input-search-input-prev)
and M-n (telega-chatbuf--input-search-input-next) to cycle chatbuf input ring.

* Sending messages via bots
If chatbuf input starts with @<botname> <query> and mentioned bot support inline
mode, then pressing TAB (telega-chatbuf-complete-or-next-link) will pop a
special buffer with the inline results to the bot inline <query>, you can use
these results to send a message via bot. Some useful bots with inline mode
support are:

- @gif To search and send animations
- @pic, @bing To search and send pictures
- @vid To search and send videos on YouTube
- @foursquare - To find and send places around the world
- etc

To find out is some bot supports inline mode or not, enter @<botname><SPC> in
chatbuf input and press TAB (telega-chatbuf-complete-or-next-link). If momentary
help is displayed, then this bot supports inline mode.

Customizable options for inline bots:
- =telega-known-inline-bots= - List of known bots for everyday use. (Default
  value: ("@gif" "@youtube" "@pic"))
- =telega-inline-query-window-select= - Non-nil to select window with inline
  query results. (Default value: t)

* Filtering chat messages a.k.a. Shared Media
Message filtering means to show only some messages matching filter. Available
message filters are: scheduled, search, by-sender, hashtag, photo, photo-video,
url, doc, file, gif, audio, video, voice-note, video-note, voice-video-note,
chat-photo, call, missed-call, mention, unread-mention, failed-to-send, pinned.

Chatbuf uses next _bindings_ for message filtering:
- ~C-c /~ (telega-chatbuf-filter) Enable chat message filtering MSG-FILTER.
- ~_~, ~C-c C-c~ (telega-chatbuf-filter-cancel) Cancel any message filtering. If point
  is at some message, then keep point on this message after reseting.
- ~C-c C-r/s~ (telega-chatbuf-filter-search) Interactively search for
  messages in chatbuf. If C-u is given, then search for QUERY sent by some chat
  member, member name is queried.

* Opening files using external programs
Document messages in Telegram has attached file in the message. You can use
=org-open-file= function for this. Behaviour is controlled by:

=telega-open-file-function= - Function to use to open files associated with
messages. Called with single argument - filename to open. Could be used to open
files in external programs. Set it to org-open-file to use Org mode to open
files. (Default value: find-file)

Setup to open some files in external applications might look like:
#+begin_src emacs-lisp
;; ("\\.pdf\\'" . default) is already member in `org-file-apps'
;; Use "xdg-open" to open files by default
(setcdr (assq t org-file-apps-gnu) 'browse-url-xdg-open)

(setq telega-open-file-function 'org-open-file)
#+end_src

If you also want to open non-document messages as file using
=telega-open-file-function= consider:

=telega-open-message-as-file= - List of message types to open as file using
telega-open-file-function. Supported message types are: photo, video, audio,
video-note, voice-note, animation. Document messages are always opens as file.
(Default value: nil)

Open urls using custom functions:

=telega-browse-url-alist= - Alist of custom url browse functions. Each element is
in form: (PREDICATE-OR-REGEX . FUNCTION). (Default value: nil)

